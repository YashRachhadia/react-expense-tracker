{"version":3,"sources":["components/Header.js","context/GlobalReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","reportWebVitals.js","index.js"],"names":["Header","reducer","state","action","type","transactions","payload","filter","transaction","id","initialState","JSON","parse","localStorage","getItem","GlobalContext","createContext","GlobalProvider","children","useReducer","GlobalReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","useEffect","setItem","stringify","AddTransaction","useState","inputText","setInputText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","alert","htmlFor","onChange","target","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2fd6d9fd.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      <h2>Expense Tracker</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: [...state.transactions, action.payload],\r\n      };\r\n    case \"DELETE_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(\r\n          (transaction) => transaction.id !== action.payload\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React, { createContext, useReducer } from \"react\";\r\nimport GlobalReducer from \"./GlobalReducer\";\r\n\r\nconst initialState = {\r\n  transactions: JSON.parse(localStorage.getItem(\"transactions\")),\r\n};\r\n\r\n//Create Context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//Provider\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(GlobalReducer, initialState);\r\n  const { Provider } = GlobalContext;\r\n\r\n  //Actions\r\n  const deleteTransaction = (id) => {\r\n    dispatch({\r\n      type: \"DELETE_TRANSACTION\",\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  const addTransaction = (transaction) => {\r\n    dispatch({\r\n      type: \"ADD_TRANSACTION\",\r\n      payload: transaction,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Provider\r\n      value={{\r\n        transactions: state.transactions,\r\n        deleteTransaction,\r\n        addTransaction,\r\n      }}\r\n    >\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst Balance = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n  return (\r\n    <>\r\n      <h4>Your Balance</h4>\r\n      <h1>Rs. {total}</h1>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Balance;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst IncomeExpenses = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n\r\n  const income = amounts\r\n    .filter((item) => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  const expense = (\r\n    amounts.filter((item) => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n    -1\r\n  ).toFixed(2);\r\n\r\n  return (\r\n    <div className=\"inc-exp-container\">\r\n      <div>\r\n        <h4>Income</h4>\r\n        <p className=\"money plus\">+Rs. {income}</p>\r\n      </div>\r\n      <div>\r\n        <h4>Expense</h4>\r\n        <p className=\"money minus\">-Rs. {expense}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IncomeExpenses;\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst Transaction = ({ transaction }) => {\r\n  const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n  const sign = transaction.amount < 0 ? \"-\" : \"+\";\r\n\r\n  return (\r\n    <li className={transaction.amount < 0 ? \"minus\" : \"plus\"}>\r\n      {transaction.text}{\" \"}\r\n      <span>\r\n        {sign}Rs. {Math.abs(transaction.amount)}\r\n      </span>\r\n      <button\r\n        className=\"delete-btn\"\r\n        onClick={() => deleteTransaction(transaction.id)}\r\n      >\r\n        x\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Transaction;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport Transaction from \"./Transaction\";\r\n\r\nconst TransactionList = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"transactions\", JSON.stringify(transactions));\r\n  }, [transactions]);\r\n\r\n  return (\r\n    <>\r\n      <h3>History</h3>\r\n      <ul id=\"list\" className=\"list\">\r\n        {transactions.map((transaction) => (\r\n          <Transaction key={transaction.id} transaction={transaction} />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TransactionList;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst AddTransaction = () => {\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [amount, setAmount] = useState(0);\r\n\r\n  const { addTransaction } = useContext(GlobalContext);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newTransaction = {\r\n      id: Math.floor(Math.random() * 100000000),\r\n      text: inputText,\r\n      amount: +amount,\r\n    };\r\n\r\n    if (inputText && amount) {\r\n      addTransaction(newTransaction);\r\n      setInputText(\"\");\r\n      setAmount(\"\");\r\n    } else {\r\n      alert(\"Please enter a valid input text and amount !\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3>Add new transaction</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Text</label>\r\n          <input\r\n            type=\"text\"\r\n            value={inputText}\r\n            onChange={(e) => setInputText(e.target.value)}\r\n            placeholder=\"Enter text...\"\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\">\r\n            Amount <br />\r\n            (negative - expense, positive - income)\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            placeholder=\"Enter amount...\"\r\n          />\r\n        </div>\r\n        <button className=\"btn\">Add transaction</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddTransaction;\r\n","import \"./App.css\";\nimport Header from \"./components/Header\";\nimport Balance from \"./components/Balance\";\nimport IncomeExpenses from \"./components/IncomeExpenses\";\nimport TransactionList from \"./components/TransactionList\";\nimport AddTransaction from \"./components/AddTransaction\";\nimport { GlobalProvider } from \"./context/GlobalState\";\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}